@page "/admin/UrlNamePlaceholder-list"
@rendermode InteractiveServer
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject ICommentAdminService CommentAdminService
@attribute [StreamRendering]

<section>
    <h1>Comment List</h1>
    <article>
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    @* ListHeaderCodePlaceholder *@
                    @* <th scope="col">Title</th>
                    <th scope="col">ToDoList</th> *@
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (comments == null)
                {
                    <tr>
                        @* LoadingCountCodePlaceholder *@
                        @* <td colspan="4">Loading...</td> *@
                    </tr>
                }
                else if (comments.Count == 0)
                {
                    <tr>
                        @* ZeroCountCodePlaceholder *@
                        @* <td colspan="4">No to do items found.</td> *@
                    </tr>
                }
                else
                {
                    @foreach (var comment in comments)
                    {
                        <tr>
                            <td>@comment.Id</td>
                            @* ListItemCodePlaceholder *@
                            @* <td>@comment.Title</td>
                            <td>@comment.ToDoList?.Title</td> *@
                            <td>
                                <a href="@("/admin/UrlNamePlaceholder-edit/" + comment.Id)">Edit</a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <a href="/admin/UrlNamePlaceholder-edit">Create</a>
    </article>
</section>

@code {
    List<Comment>? comments = null;

    protected override async Task OnInitializedAsync()
    {
        var authState = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var userName = authState.User.Identity?.Name;

        if (userName == null)
        {
            return;
        }

        comments = await CommentAdminService.GetAllAsync(userName);
    }
}
